{"version":3,"sources":["components/Order/Order.js","containers/Orders/Orders.js","components/Order/Order.module.css","containers/Orders/Orders.module.css"],"names":["Order","props","ingredients","ingredientsName","push","name","amount","ingredientsOutput","map","ingredient","style","textTransform","display","margin","border","padding","className","classes","price","Orders","goToBurgerBuilder","history","this","onFetchOrders","token","userId","orders","Spinner","loading","order","key","id","length","Button","btnType","clicked","Component","connect","state","auth","dispatch","actionCreators","onFetchOrdersStart","withErrorHandler","axios","module","exports"],"mappings":"oMAsCeA,EAnCD,SAACC,GACb,IAAMC,EAAc,GACpB,IAAK,IAAIC,KAAmBF,EAAMC,YAChCA,EAAYE,KAAK,CACfC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAI9B,IAAMI,EAAoBL,EAAYM,KAAI,SAACC,GACzC,OACE,0BACEC,MAAO,CACLC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,QAGVN,EAAWJ,KATd,KASsBI,EAAWH,WAKrC,OACE,yBAAKU,UAAWC,IAAQjB,OACtB,2CAAiBO,GACjB,qCACS,gCAASN,EAAMiB,U,iECtBxBC,E,4MAKJC,kBAAoB,WAClB,EAAKnB,MAAMoB,QAAQjB,KAAK,M,kEAJxBkB,KAAKrB,MAAMsB,cAAcD,KAAKrB,MAAMuB,MAAOF,KAAKrB,MAAMwB,U,+BAQtD,IAAIC,EAAS,kBAACC,EAAA,EAAD,MAsBb,OArBKL,KAAKrB,MAAM2B,UACdF,EAASJ,KAAKrB,MAAMyB,OAAOlB,KAAI,SAACqB,GAAD,OAC7B,kBAAC,EAAD,CACEX,MAAOW,EAAMX,MACbhB,YAAa2B,EAAM3B,YACnB4B,IAAKD,EAAME,SAIgB,IAA7BT,KAAKrB,MAAMyB,OAAOM,SACpBN,EACE,yBAAKV,UAAWC,IAAQE,QACtB,yCACA,iFACA,kBAACc,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAASb,KAAKF,mBAAxC,0BAOC,6BAAMM,O,GAhCIU,aAqDNC,uBAjBS,SAACC,GACvB,MAAO,CACLZ,OAAQY,EAAMZ,OAAOA,OACrBE,QAASU,EAAMZ,OAAOE,QACtBJ,MAAOc,EAAMC,KAAKf,MAClBC,OAAQa,EAAMC,KAAKd,WAII,SAACe,GAC1B,MAAO,CACLjB,cAAe,SAACC,EAAOC,GAAR,OACbe,EAASC,IAA2BjB,EAAOC,KAC7CiB,mBAAoB,kBAAMF,EAASC,WAIxBJ,CAGbM,YAAiBxB,EAAQyB,O,mBCjE3BC,EAAOC,QAAU,CAAC,MAAQ,uB,mBCA1BD,EAAOC,QAAU,CAAC,OAAS","file":"static/js/5.002fe632.chunk.js","sourcesContent":["import React from 'react';\nimport classes from './Order.module.css';\n\nconst Order = (props) => {\n  const ingredients = [];\n  for (let ingredientsName in props.ingredients) {\n    ingredients.push({\n      name: ingredientsName,\n      amount: props.ingredients[ingredientsName],\n    });\n  }\n\n  const ingredientsOutput = ingredients.map((ingredient) => {\n    return (\n      <span\n        style={{\n          textTransform: 'capitalize',\n          display: 'inline-block',\n          margin: '0 8px',\n          border: '1px solid #ccc',\n          padding: '5px',\n        }}\n      >\n        {ingredient.name}: {ingredient.amount}\n      </span>\n    );\n  });\n\n  return (\n    <div className={classes.Order}>\n      <p>Ingredients: {ingredientsOutput}</p>\n      <p>\n        Price: <strong>{props.price}</strong>\n      </p>\n    </div>\n  );\n};\n\nexport default Order;\n","import React, { Component } from 'react';\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport { connect } from 'react-redux';\nimport * as actionCreators from '../../store/actions/index';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport classes from './Orders.module.css';\nimport Button from '../../components/UI/Button/Button';\n\nclass Orders extends Component {\n  componentDidMount() {\n    this.props.onFetchOrders(this.props.token, this.props.userId);\n  }\n\n  goToBurgerBuilder = () => {\n    this.props.history.push('/');\n  };\n\n  render() {\n    let orders = <Spinner />;\n    if (!this.props.loading) {\n      orders = this.props.orders.map((order) => (\n        <Order\n          price={order.price}\n          ingredients={order.ingredients}\n          key={order.id}\n        />\n      ));\n    }\n    if (this.props.orders.length === 0) {\n      orders = (\n        <div className={classes.Orders}>\n          <h1>No orders</h1>\n          <p>Please go to the Burger Builder and order a burger</p>\n          <Button btnType=\"Success\" clicked={this.goToBurgerBuilder}>\n            Go To Burger Builder\n          </Button>\n        </div>\n      );\n    }\n\n    return <div>{orders}</div>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    orders: state.orders.orders,\n    loading: state.orders.loading,\n    token: state.auth.token,\n    userId: state.auth.userId,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onFetchOrders: (token, userId) =>\n      dispatch(actionCreators.fetchOrders(token, userId)),\n    onFetchOrdersStart: () => dispatch(actionCreators.fetchOrdersStart()),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withErrorHandler(Orders, axios));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Orders\":\"Orders_Orders__zeSJl\"};"],"sourceRoot":""}